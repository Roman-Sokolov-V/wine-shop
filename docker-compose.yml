services:
  shelter:
    container_name: shelter
    build:
      context: ./backend      # контекст збірки — папка backend
    env_file:
      - ./backend/.env        # .env всередині backend
    ports:
      - "8000:8000"
    command: ["sh", "-c", "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./backend/:/app       # змонтувати backend у /app контейнера

  db:
    image: postgres:16-bullseye
    env_file:
      - ./backend/.env        # .env всередині backend
#    environment:
#      POSTGRES_PASSWORD: shelter
#      POSTGRES_USER: shelter
#      POSTGRES_DB: shelter
#      POSTGRES_HOST: db
#      POSTGRES_PORT: 5432
#      PGDATA: /var/lib/postgresql/data

    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shelter -d shelter -h db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    entrypoint: sh
    command: ["-c", "mkdir -p /data/test-bucket && /usr/bin/minio server /data"]
    env_file:
      - ./backend/.env       # .env всередині backend
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - minio_data:/data

volumes:
  minio_data:
  postgres_data:

#  frontend:
#    build:
#      context: ./frontend
#    volumes:
#      - react_build:/react/build
#    command: nginx
#
#  nginx:
#    image: nginx:latest
#    ports:
#      - 80:80
#    volumes:
#      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
#      - react_build:/var/www/react



#volumes:
#  #react_build:
#  minio_data:
#  postgres_data:


