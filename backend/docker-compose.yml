services:
  shelter:
    container_name: shelter
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: ["sh", "-c", "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

    volumes:
      - ./:/app

  dramatiq_worker:
    container_name: dramatiq
    build:
      context: .
    env_file:
      - .env
    command: [ "sh", "-c", "python manage.py makemigrations && python manage.py migrate && python manage.py rundramatiq"]
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./:/app

  db:
    image: postgres:16-bullseye
    env_file:
      - .env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h ${POSTGRES_HOST}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:$PGDATA

  minio:
    image: minio/minio
    entrypoint: sh
    command: ["-c", "mkdir -p /data/test-bucket && /usr/bin/minio server /data"]
    env_file:
      - .env
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost${MINIO_ADDRESS}/minio/health/live || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
#    environment:
#      - MINIO_ROOT_USER=${S3_ACCESS_KEY}
#      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
    volumes:
      - minio_data:/data

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"   # для Dramatiq
      - "15672:15672" # веб-інтерфейс
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  minio_data:
  postgres_data:
  rabbitmq-data:
