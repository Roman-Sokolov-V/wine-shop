services:
  db:
    image: postgres:16-bullseye
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h ${POSTGRES_HOST}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shelter_network

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server --console-address ":9001" /data
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shelter_network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - shelter_network


  shelter:
    container_name: shelter
    build:
      context: .
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.prod
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
        restart: true
      minio:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./:/app
    networks:
      - shelter_network
    deploy:
      restart_policy:
        condition: on-failure
        window: 10s
    healthcheck:
      test: [ "CMD", "python", "healthcheck.py" ]
      interval: 10s
      timeout: 5s
      retries: 30


  celery:
    container_name: celery
    build:
      context: .
    env_file:
      - .env
    command: [ "sh", "-c", "celery -A config worker --loglevel=INFO" ]
    depends_on:
      redis:
        condition: service_started
      shelter:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - shelter_network

  celery-beat:
    container_name: celery-beat
    build:
      context: .
    env_file:
      - .env
    command: [ "sh", "-c", "celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler" ]
    depends_on:
      shelter:
        condition: service_healthy
      celery:
        condition: service_started
      redis:
        condition: service_started
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - shelter_network

  minio_mc:
    build:
      context: .
      dockerfile: docker/minio_mc/Dockerfile
    container_name: minio_mc
    command: ["/bin/sh", "-c", "/commands/setup_minio.sh"]
    depends_on:
      minio:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - shelter_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/app/staticfiles
      - www-html:/var/www/html
      - etc-letsencrypt:/etc/letsencrypt
    depends_on:
      shelter:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - shelter_network

volumes:
  minio_data:
  postgres_data:
  redis-data:
  etc-letsencrypt:
  www-html:

networks:
  shelter_network:
    driver: bridge

# sudo rm -rf /var/lib/docker/volumes/postgres_data